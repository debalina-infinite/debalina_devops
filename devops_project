Hot Data: Records ≤ 3 months old → Stay in Cosmos DB 
Cold Data: Records > 3 months old → Moved to Azure Blob Storage 

step-by-step resource creation using az cli  to implement the hot-cold storage architecture using:

Azure Cosmos DB (hot tier)

Azure Blob Storage (cold tier)

Azure Function App (for migration logic)
1) Create Resource Group
az group create \
  --name hotColdRG \
  --location eastus
2) Create Azure Cosmos DB
az cosmosdb create \
  --name billingCosmosAccount \
  --resource-group hotColdRG \
  --locations regionName=eastus failoverPriority=0 \
  --kind GlobalDocumentDB \
  --default-consistency-level Session
3) Create a SQL database and container
az cosmosdb sql database create \
  --account-name billingCosmosAccount \
  --resource-group hotColdRG \
  --name billingdb

az cosmosdb sql container create \
  --account-name billingCosmosAccount \
  --resource-group hotColdRG \
  --database-name billingdb \
  --name records \
  --partition-key-path /userId
4) Create Azure Storage Account (Cool Tier)
az storage account create \
  --name billingcoldstorage \
  --resource-group hotColdRG \
  --location eastus \
  --sku Standard_GRS \
  --kind StorageV2 \
  --access-tier Cool
5) Create a container to store cold billing data:
az storage container create \
  --account-name billingcoldstorage \
  --name billingrecords \
  --public-access off
 Create Azure Function App
6) Create a Storage Account for function state
az storage account create \
  --name billingfuncstorage \
  --resource-group hotColdRG \
  --location eastus \
  --sku Standard_LRS \
  --kind StorageV2
7) Create a Consumption Plan:
az functionapp plan create \
  --name billingFuncPlan \
  --resource-group hotColdRG \
  --location eastus \
  --number-of-workers 1 \
  --sku Y1 \
  --is-linux
8) Create a Function App (Python):
az functionapp create \
  --name billingArchiverFunc \
  --resource-group hotColdRG \
  --plan billingFuncPlan \
  --runtime python \
  --runtime-version 3.10 \
  --functions-version 4 \
  --storage-account billingfuncstorage \
  --os-type Linux
7) Set App Settings for Cosmos and Blob
# Cosmos keys and endpoint
COSMOS_KEY=$(az cosmosdb keys list --name billingCosmosAccount --resource-group hotColdRG --query primaryMasterKey -o tsv)
COSMOS_URI=$(az cosmosdb show --name billingCosmosAccount --resource-group hotColdRG --query documentEndpoint -o tsv)

# Storage connection string
BLOB_CONN=$(az storage account show-connection-string --name billingcoldstorage --resource-group hotColdRG -o tsv)

az functionapp config appsettings set \
  --name billingArchiverFunc \
  --resource-group hotColdRG \
  --settings \
    COSMOS_DB_URI=$COSMOS_URI \
    COSMOS_DB_KEY=$COSMOS_KEY \
    BLOB_CONNECTION_STRING="$BLOB_CONN"
8) Deploy the Function App Code:
cd hot-cold-archiver
zip -r function.zip BillingArchiver host.json requirements.txt

az functionapp deployment source config-zip \
  --name billingArchiverFunc \
  --resource-group hotColdRG \
  --src function.zip
9)  Monitor & Optimize
az monitor diagnostic-settings create \
  --name billingArchiverLogs \
  --resource $(az functionapp show --name billingArchiverFunc --resource-group hotColdRG --query id -o tsv) \
  --workspace $(az monitor log-analytics workspace show --resource-group hotColdRG --query id -o tsv) \
  --logs '[{"category": "FunctionAppLogs","enabled": true}]'



